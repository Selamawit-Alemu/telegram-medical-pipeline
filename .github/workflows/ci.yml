name: ACIS Python CI

on:
  push:
    branches: [main, task-*, feature*]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v4

      - name: üêç Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
          cache: 'pip'

      - name: üì¶ Install Python & dbt dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install dbt-core dbt-postgres pytest

      - name: ‚öôÔ∏è Set up environment
        run: echo "Environment variables loaded"
        env:
          TELEGRAM_API_ID: ${{ secrets.TELEGRAM_API_ID }}
          TELEGRAM_API_HASH: ${{ secrets.TELEGRAM_API_HASH }}
          PHONE: ${{ secrets.PHONE }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}

      - name: üöÄ Run Telegram Pipeline (Scraper or Orchestration)
        run: |
          echo "Running scraper or orchestrator..."
          python src/main.py  # Or src/your_script.py
        env:
          TELEGRAM_API_ID: ${{ secrets.TELEGRAM_API_ID }}
          TELEGRAM_API_HASH: ${{ secrets.TELEGRAM_API_HASH }}
          PHONE: ${{ secrets.PHONE }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}

      - name: üõ† Run dbt models
        working-directory: telegram_dbt
        run: |
          dbt deps
          dbt seed --profiles-dir .
          dbt run --profiles-dir .
          dbt test --profiles-dir .


